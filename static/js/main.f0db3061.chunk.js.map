{"version":3,"sources":["components/header/Header.js","components/categories/Categoriesbar.js","components/videos/Video.js","components/screens/HomeScreen.js","components/sidebar/Sidebar.js","YoutubeApp.js","serviceWorker.js","index.js"],"names":["Header","handleToggle","className","size","onClick","src","alt","type","placeholder","Categoriesbar","useState","activeElement","setActiveElement","map","word","i","key","Video","HomeScreen","Array","Sidebar","sidebar","YoutubeApp","handleSidebar","val","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uXA6BeA,G,MAvBA,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACb,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,CAAQA,UAAU,eAAeC,KAAM,GACvCC,QAAS,kBAAIH,OAEb,yBAAKI,IAAI,+BAA+BC,IAAI,OAAOJ,UAAU,iBAC7D,8BACI,2BAAOK,KAAK,OAAOC,YAAY,YAC/B,4BAAQD,KAAK,UACT,kBAAC,IAAD,CAAiBJ,KAAM,OAG/B,yBAAKD,UAAU,iBACX,kBAAC,IAAD,CAAiBC,KAAM,KACvB,kBAAC,IAAD,CAAQA,KAAM,KACd,yBAAKE,IAAI,+BAA+BC,IAAI,OAAOJ,UAAU,e,QCE9DO,G,MArBO,WAAO,IAAD,EACiBC,mBAAS,OAD1B,mBACjBC,EADiB,KACHC,EADG,KAQxB,OACI,yBAAKV,UAAU,YAJF,CAAC,MAAO,WAAY,UAAW,UAAW,kBAAkB,aAAa,SAAS,QACnG,QAAQ,iBAAiB,aAAa,SAAS,gBAAgB,SAAS,QAAQ,SAI9DW,KAAI,SAACC,EAAKC,GAAN,OACd,yBAAKC,IAAKD,EAAGb,UAAWS,IAAkBG,EAAM,2BAA6B,oBAC7EV,QAAS,kBAToBQ,EASIE,KAE5BA,SCYFG,G,MAzBD,WACV,OACI,yBAAKf,UAAU,SACX,yBAAKA,UAAU,cACX,yBAAKG,IAAI,sIAAsIC,IAAI,cACnJ,uCAEJ,yBAAKJ,UAAU,gBAAf,2CAGA,yBAAKA,UAAU,kBACX,8BACI,kBAAC,IAAD,MADJ,oBAGA,6CAEJ,yBAAKA,UAAU,kBACX,yBAAKG,IAAI,mGAAmGC,IAAI,YAChH,kDCJDY,G,MAbI,WACjB,OACE,yBAAKhB,UAAU,eACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACZ,YAAI,IAAIiB,MAAM,KAAKN,KAAI,kBACpB,kBAAC,EAAD,aC0CGO,G,MAxCC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASpB,EAAmB,EAAnBA,aAC1B,OACE,yBACEC,UAAWmB,EAAU,eAAiB,UACtCjB,QAAS,kBAAMH,MAEf,4BACE,kBAAC,IAAD,CAAQE,KAAM,KACd,uCAEF,4BACE,kBAAC,IAAD,CAAiBA,KAAM,KACvB,+CAEF,4BACE,kBAAC,IAAD,CAAWA,KAAM,KACjB,8CAEF,4BACE,kBAAC,IAAD,CAAWA,KAAM,KACjB,0CAEF,4BACE,kBAAC,IAAD,CAAgBA,KAAM,KACtB,0CAEF,4BACE,kBAAC,IAAD,CAAyBA,KAAM,KAC/B,6CAEF,6BACA,4BACE,kBAAC,IAAD,CAAaA,KAAM,KACnB,0CAEF,gCCzBSmB,G,MAjBI,WAAO,IAAD,EACWZ,oBAAS,GADpB,mBACdW,EADc,KACNE,EADM,KAEftB,EAAe,kBAAMsB,GAAc,SAAAC,GAAG,OAAKA,MACjD,OACI,oCACA,kBAAC,EAAD,CAAQvB,aAAcA,IACtB,yBAAKC,UAAU,kBAEX,kBAAC,EAAD,CAASmB,QAASA,EAASpB,aAAcA,IACzC,yBAAKC,UAAU,aACf,kBAAC,EAAD,WCJQuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f0db3061.chunk.js","sourcesContent":["import React from 'react'\r\nimport {FaBars} from 'react-icons/fa'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\nimport {MdApps, MdNotifications} from 'react-icons/md'\r\nimport './_header.scss'\r\n\r\nconst Header = ({handleToggle}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <FaBars className=\"header__menu\" size={26} \r\n            onClick={()=>handleToggle()}\r\n            />\r\n            <img src=\"youtube-api-clone/ytlogo.png\" alt=\"logo\" className=\"header__logo\"/>\r\n            <form >\r\n                <input type=\"text\" placeholder=\"Search \"/>\r\n                <button type=\"submit\">\r\n                    <AiOutlineSearch size={22}/>\r\n                </button>\r\n            </form>\r\n            <div className=\"header__icons\">\r\n                <MdNotifications size={28} />\r\n                <MdApps size={28} />\r\n                <img src=\"youtube-api-clone/avatar.png\" alt=\"user\" className=\"avatar\"/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport './_categoriesbar.scss'\r\n\r\nconst Categoriesbar = () => {\r\n    const [activeElement,setActiveElement] = useState('All');\r\n\r\n    const handleActiveElement = (val) => setActiveElement(val)\r\n\r\n    const keywords = ['All', 'React Js', 'Next Js', 'Cricket', 'Science Fiction','Use Of Api','Vue js','Redux',\r\n    'Music','Algorithm Art ','E-commerce','Guitar','Bengali Songs','Coding','Poems','Islam']\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            {keywords.map((word,i)=> \r\n            <div key={i} className={activeElement === word ?\"category__element active\" : \"category__element\"}\r\n            onClick={()=>handleActiveElement(word)}\r\n            >\r\n                {word}\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoriesbar\r\n","import React from 'react'\r\nimport { AiFillEye } from 'react-icons/ai'\r\nimport './_video.scss'\r\n\r\nconst Video = () => {\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__top\">\r\n                <img src=\"https://i.ytimg.com/vi/DyvDXY1aAzA/hq720.jpg?sqp=-oaymwEZCNAFEJQDSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLBjpnqIpRrltzJ0EcbXRi8N2HtCWQ\" alt=\"thumbnail\"/>\r\n                <span>5.50</span>\r\n            </div>\r\n            <div className=\"video__title\">\r\n                Create app in 5 minutes #made by chintu\r\n            </div>\r\n            <div className=\"video__details\">\r\n                <span>\r\n                    <AiFillEye /> 50 Views â€¢\r\n                </span>\r\n                <span>5 days ago</span>\r\n            </div>\r\n            <div className=\"video__channel\">\r\n                <img src=\"https://yt3.ggpht.com/a-/AOh14GixdVjxqi11Md_OCDd3K7SOQEhizq4f3EI_0g=s68-c-k-c0x00ffffff-no-rj-mo\" alt=\"channel\"/>\r\n                <p>Rainbow Hat Jr.</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import React from 'react';\r\nimport Categoriesbar from '../categories/Categoriesbar';\r\nimport Video from '../videos/Video';\r\nimport './_homescreen.scss'\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <div className=\"home_screen\">\r\n      <Categoriesbar />\r\n      <div className='video-grid'>\r\n        {[...new Array(20)].map(() => (\r\n            <Video />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react';\r\nimport {\r\n  MdSubscriptions,\r\n  MdExitToApp,\r\n  MdThumbUp,\r\n  MdHistory,\r\n  MdHome,\r\n  MdSentimentDissatisfied,\r\n  MdLibraryBooks,\r\n} from 'react-icons/md';\r\n\r\nimport './_sidebar.scss';\r\n\r\nconst Sidebar = ({ sidebar, handleToggle }) => {\r\n  return (\r\n    <nav\r\n      className={sidebar ? 'sidebar open' : 'sidebar'}\r\n      onClick={() => handleToggle()}\r\n    >\r\n      <li>\r\n        <MdHome size={23} />\r\n        <span>Home</span>\r\n      </li>\r\n      <li>\r\n        <MdSubscriptions size={23} />\r\n        <span>Subscription</span>\r\n      </li>\r\n      <li>\r\n        <MdThumbUp size={23} />\r\n        <span>Liked Video</span>\r\n      </li>\r\n      <li>\r\n        <MdHistory size={23} />\r\n        <span>History</span>\r\n      </li>\r\n      <li>\r\n        <MdLibraryBooks size={23} />\r\n        <span>Library</span>\r\n      </li>\r\n      <li>\r\n        <MdSentimentDissatisfied size={23} />\r\n        <span>Who's Know</span>\r\n      </li>\r\n      <hr />\r\n      <li>\r\n        <MdExitToApp size={23} />\r\n        <span>Log Out</span>\r\n      </li>\r\n      <hr />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from 'react'\r\nimport Header from './components/header/Header'\r\nimport HomeScreen from './components/screens/HomeScreen'\r\nimport Sidebar from './components/sidebar/Sidebar'\r\nimport './_app.scss'\r\n\r\nconst YoutubeApp = () => {\r\n    const [sidebar,handleSidebar] = useState(false)\r\n    const handleToggle = () => handleSidebar(val => !val)\r\n    return (\r\n        <>\r\n        <Header handleToggle={handleToggle}/>\r\n        <div className=\"app__container\">\r\n       \r\n            <Sidebar sidebar={sidebar} handleToggle={handleToggle}/>\r\n            <div className=\"app__main\">\r\n            <HomeScreen />\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default YoutubeApp\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_base.scss';\nimport YoutubeApp from './YoutubeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <YoutubeApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}