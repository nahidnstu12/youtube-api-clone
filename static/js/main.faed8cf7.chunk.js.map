{"version":3,"sources":["components/header/Header.js","components/categories/Categoriesbar.js","components/videos/Video.js","components/screens/HomeScreen.js","utils/contsants.js","utils/firebase.js","components/screens/LoginScreen.js","redux/actions/authAction.js","redux/actionTypes.js","components/sidebar/Sidebar.js","YoutubeApp.js","serviceWorker.js","redux/reducer/authReducer.js","redux/store.js","index.js"],"names":["Header","handleToggle","className","size","onClick","src","alt","type","placeholder","Categoriesbar","useState","activeElement","setActiveElement","map","word","i","key","Video","HomeScreen","Array","CLIENT_URL","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","LoginScreen","dispatch","useDispatch","history","useHistory","token","useSelector","state","accessToken","useEffect","push","a","provider","GoogleAuthProvider","signInWithPopup","res","console","log","credential","profile","name","additionalUserInfo","photoUrl","picture","payload","sessionStorage","setItem","JSON","stringify","message","Sidebar","sidebar","removeItem","Layout","children","handleSidebar","val","YoutubeApp","loading","path","exact","to","Boolean","window","location","hostname","match","initailState","getItem","parse","rootReducer","combineReducers","action","error","compose","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.faed8cf7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {FaBars} from 'react-icons/fa'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\nimport {MdApps, MdNotifications} from 'react-icons/md'\r\nimport './_header.scss'\r\n\r\nconst Header = ({handleToggle}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <FaBars className=\"header__menu\" size={26} \r\n            onClick={()=>handleToggle()}\r\n            />\r\n            <img src=\"./ytlogo.png\" alt=\"logo\" className=\"header__logo\"/>\r\n            <form >\r\n                <input type=\"text\" placeholder=\"Search \"/>\r\n                <button type=\"submit\">\r\n                    <AiOutlineSearch size={22}/>\r\n                </button>\r\n            </form>\r\n            <div className=\"header__icons\">\r\n                <MdNotifications size={28} />\r\n                <MdApps size={28} />\r\n                <img src=\"./avatar.png\" alt=\"user\" className=\"avatar\"/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from 'react'\r\nimport './_categoriesbar.scss'\r\n\r\nconst Categoriesbar = () => {\r\n    const [activeElement,setActiveElement] = useState('All');\r\n\r\n    const handleActiveElement = (val) => setActiveElement(val)\r\n\r\n    const keywords = ['All', 'React Js', 'Next Js', 'Cricket', 'Science Fiction','Use Of Api','Vue js','Redux',\r\n    'Music','Algorithm Art ','E-commerce','Guitar','Bengali Songs','Coding','Poems','Islam']\r\n\r\n    return (\r\n        <div className=\"category\">\r\n            {keywords.map((word,i)=> \r\n            <div key={i} className={activeElement === word ?\"category__element active\" : \"category__element\"}\r\n            onClick={()=>handleActiveElement(word)}\r\n            >\r\n                {word}\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categoriesbar\r\n","import React from 'react'\r\nimport { AiFillEye } from 'react-icons/ai'\r\nimport './_video.scss'\r\n\r\nconst Video = () => {\r\n    return (\r\n        <div className=\"video\">\r\n            <div className=\"video__top\">\r\n                <img src=\"https://i.ytimg.com/vi/DyvDXY1aAzA/hq720.jpg?sqp=-oaymwEZCNAFEJQDSFXyq4qpAwsIARUAAIhCGAFwAQ==&rs=AOn4CLBjpnqIpRrltzJ0EcbXRi8N2HtCWQ\" alt=\"thumbnail\"/>\r\n                <span>5.50</span>\r\n            </div>\r\n            <div className=\"video__title\">\r\n                Create app in 5 minutes #made by chintu\r\n            </div>\r\n            <div className=\"video__details\">\r\n                <span>\r\n                    <AiFillEye /> 50 Views â€¢\r\n                </span>\r\n                <span>5 days ago</span>\r\n            </div>\r\n            <div className=\"video__channel\">\r\n                <img src=\"https://yt3.ggpht.com/a-/AOh14GixdVjxqi11Md_OCDd3K7SOQEhizq4f3EI_0g=s68-c-k-c0x00ffffff-no-rj-mo\" alt=\"channel\"/>\r\n                <p>Rainbow Hat Jr.</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import React from 'react';\r\nimport Categoriesbar from '../categories/Categoriesbar';\r\nimport Video from '../videos/Video';\r\nimport './_homescreen.scss'\r\n\r\nconst HomeScreen = () => {\r\n  return (\r\n    <div className=\"home_screen\">\r\n      <Categoriesbar />\r\n      <div className='video-grid'>\r\n        {[...new Array(20)].map(() => (\r\n            <Video />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","export const CLIENT_URL = \"/youtube-api-clone\";\r\nexport const YTC_ACESS_TOKEN = \"YTC_ACESS_TOKEN\";\r\nexport const YTC_PROFILE = \"YTC_PROFILE\";\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJ4uybqEPan5fWxGOX0eAwDsfY2mc6z20\",\r\n  authDomain: \"ytc-app-stream.firebaseapp.com\",\r\n  projectId: \"ytc-app-stream\",\r\n  storageBucket: \"ytc-app-stream.appspot.com\",\r\n  messagingSenderId: \"723112692824\",\r\n  appId: \"1:723112692824:web:833e3cfcceeb5569720e2d\",\r\n  measurementId: \"G-KJ8PMC8BSX\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.auth();\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./_loginScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/authAction\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nexport const LoginScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.auth.accessToken);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      history.push(\"/youtube-api-clone/\");\r\n    }\r\n  }, [token]);\r\n\r\n  const handleLogin = () => {\r\n    dispatch(login());\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_Container\">\r\n        <img src=\"./ytlogo.png\" alt=\"logo\" />\r\n        <button onClick={handleLogin} className=\"login_Btn\">\r\n          Login With Google\r\n        </button>\r\n        <p className=\"text\">This Project is made using Youtube Api</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { YTC_ACESS_TOKEN, YTC_PROFILE } from \"../../utils/contsants\";\r\nimport auth from \"../../utils/firebase\";\r\nimport {\r\n  LOAD_PROFILE,\r\n  LOGIN_FAILED,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOG_OUT,\r\n} from \"../actionTypes\";\r\n\r\nexport const login = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    });\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const res = await auth.signInWithPopup(provider);\r\n    console.log(res);\r\n\r\n    const accessToken = res.credential.accessToken;\r\n\r\n    const profile = {\r\n      name: res.additionalUserInfo.profile.name,\r\n      photoUrl: res.additionalUserInfo.profile.picture,\r\n    };\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: accessToken,\r\n    });\r\n\r\n    dispatch({\r\n      type: LOAD_PROFILE,\r\n      payload: profile,\r\n    });\r\n    // session storage\r\n    sessionStorage.setItem(YTC_ACESS_TOKEN, accessToken);\r\n    sessionStorage.setItem(YTC_PROFILE, JSON.stringify(profile));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILED,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({\r\n    type: LOG_OUT,\r\n  });\r\n  sessionStorage.removeItem(YTC_ACESS_TOKEN);\r\n  sessionStorage.removeItem(YTC_PROFILE);\r\n};\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const LOAD_PROFILE = \"LOAD_PROFILE\";\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  MdSubscriptions,\r\n  MdExitToApp,\r\n  MdThumbUp,\r\n  MdHistory,\r\n  MdHome,\r\n  MdSentimentDissatisfied,\r\n  MdLibraryBooks,\r\n} from \"react-icons/md\";\r\nimport \"./_sidebar.scss\";\r\nimport { logout } from \"../../redux/actions/authAction\";\r\n\r\nconst Sidebar = ({ sidebar, handleToggle }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    // console.log(\"logout\")\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={sidebar ? \"sidebar open\" : \"sidebar\"}\r\n      onClick={() => handleToggle()}\r\n    >\r\n      <li>\r\n        <MdHome size={23} />\r\n        <span>Home</span>\r\n      </li>\r\n      <li>\r\n        <MdSubscriptions size={23} />\r\n        <span>Subscription</span>\r\n      </li>\r\n      <li>\r\n        <MdThumbUp size={23} />\r\n        <span>Liked Video</span>\r\n      </li>\r\n      <li>\r\n        <MdHistory size={23} />\r\n        <span>History</span>\r\n      </li>\r\n      <li>\r\n        <MdLibraryBooks size={23} />\r\n        <span>Library</span>\r\n      </li>\r\n      <li>\r\n        <MdSentimentDissatisfied size={23} />\r\n        <span>Who's Know</span>\r\n      </li>\r\n      <hr />\r\n      <li onClick={handleLogout}>\r\n        <MdExitToApp size={23} />\r\n        <span>Log Out</span>\r\n      </li>\r\n      <hr />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/header/Header\";\r\nimport HomeScreen from \"./components/screens/HomeScreen\";\r\nimport { LoginScreen } from \"./components/screens/LoginScreen\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\r\nimport { CLIENT_URL } from \"./utils/contsants\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./_app.scss\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const [sidebar, handleSidebar] = useState(false);\r\n  const handleToggle = () => handleSidebar((val) => !val);\r\n  return (\r\n    <>\r\n      <Header handleToggle={handleToggle} />\r\n      <div className=\"app__container\">\r\n        <Sidebar sidebar={sidebar} handleToggle={handleToggle} />\r\n        <div className=\"app__main\">{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst YoutubeApp = () => {\r\n  const { accessToken, loading } = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!accessToken && !loading) {\r\n      history.push(`${CLIENT_URL}/auth`);\r\n    }\r\n  }, [accessToken, loading, history]);\r\n\r\n  return (\r\n    // <Router>\r\n    <Switch>\r\n      <Route path={`${CLIENT_URL}/auth`}>\r\n        <LoginScreen />\r\n      </Route>\r\n      <Route exact path={`${CLIENT_URL}/`}>\r\n        <Layout>\r\n          <HomeScreen />\r\n        </Layout>\r\n      </Route>\r\n      <Route exact path={`${CLIENT_URL}/search`}>\r\n        <Layout>\r\n          <h1>Search Results</h1>\r\n        </Layout>\r\n      </Route>\r\n      <Route>\r\n        <Redirect to=\"/youtube-api-clone/\" />\r\n      </Route>\r\n    </Switch>\r\n    // </Router>\r\n  );\r\n};\r\n\r\nexport default YoutubeApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { YTC_ACESS_TOKEN, YTC_PROFILE } from \"../../utils/contsants\";\r\nimport * as types from \"../actionTypes\";\r\n\r\nconst initailState = {\r\n  accessToken: sessionStorage.getItem(YTC_ACESS_TOKEN) || null,\r\n  profile: JSON.parse(sessionStorage.getItem(YTC_PROFILE)) || null,\r\n  loading: false,\r\n};\r\n\r\nexport const authReducer = (state = initailState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        accessToken: payload,\r\n      };\r\n\r\n    case types.LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        accessToken: null,\r\n        error: payload,\r\n      };\r\n\r\n    case types.LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case types.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        accessToken: null,\r\n        profile: null,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { authReducer } from \"./reducer/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n\r\nconst compose = composeWithDevTools(applyMiddleware(thunk));\r\n\r\nconst store = createStore(rootReducer, {}, compose);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./_base.scss\";\nimport YoutubeApp from \"./YoutubeApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <React.StrictMode>\n        <YoutubeApp />\n      </React.StrictMode>\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}