{"version":3,"sources":["components/header/Header.js","utils/axios.js","redux/actions/videosAction.js","redux/actionTypes.js","utils/contsants.js","components/categories/Categoriesbar.js","components/videos/Video.js","components/screens/Loader.js","components/screens/HomeScreen.js","utils/firebase.js","components/screens/LoginScreen.js","redux/actions/authAction.js","components/sidebar/Sidebar.js","YoutubeApp.js","serviceWorker.js","redux/reducer/authReducer.js","redux/reducer/videosReducer.js","redux/store.js","index.js"],"names":["Header","handleToggle","profile","useSelector","state","auth","name","photoUrl","className","size","onClick","src","alt","type","placeholder","title","request","axios","create","baseURL","process","params","key","getPopularVideos","dispatch","getStatic","a","part","chart","regionCode","maxResults","pageToken","homeVideos","data","console","log","payload","videos","items","nextPageToken","category","message","getCategoricVideos","keyword","q","CLIENT_URL","keywords","Categoriesbar","useState","activeElement","setActiveElement","useDispatch","map","word","i","val","Video","video","chanelIcon","setChanelIcon","duration","setDuration","views","setViews","id","snippet","publishedAt","medium","thumbnails","channelTitle","channelId","seconds","moment","asSeconds","_duration","utc","format","_videoId","videoId","useEffect","contentDetails","statistics","viewCount","getContents","default","url","getChannelIcon","numeral","fromNow","useStyles","makeStyles","theme","root","display","placeItems","width","loader","color","Loader","classes","CircularProgress","HomeScreen","activeCategory","length","dataLength","hasMore","next","index","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","LoginScreen","history","useHistory","token","accessToken","push","provider","GoogleAuthProvider","addScope","signInWithPopup","res","credential","additionalUserInfo","picture","sessionStorage","setItem","JSON","stringify","Sidebar","sidebar","signOut","removeItem","Layout","children","handleSidebar","YoutubeApp","loading","path","exact","to","Boolean","window","location","hostname","match","initailState","getItem","parse","rootReducer","combineReducers","action","error","compose","composeWithDevTools","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7f3bc9db.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { MdApps, MdNotifications } from \"react-icons/md\";\r\nimport \"./_header.scss\";\r\n\r\nconst Header = ({ handleToggle }) => {\r\n    \r\n  const { profile } = useSelector((state) => state.auth);\r\n  const name = profile?.name;\r\n  const photoUrl = profile?.photoUrl;\r\n  return (\r\n    <div className=\"header\">\r\n      <FaBars\r\n        className=\"header__menu\"\r\n        size={26}\r\n        onClick={() => handleToggle()}\r\n      />\r\n      <img src=\"./ytlogo.png\" alt=\"logo\" className=\"header__logo\" />\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Search \" />\r\n        <button type=\"submit\">\r\n          <AiOutlineSearch size={22} />\r\n        </button>\r\n      </form>\r\n      <div className=\"header__icons\">\r\n        <MdNotifications size={28} />\r\n        <MdApps size={28} />\r\n        <img src={photoUrl} alt={name} className=\"avatar\" title={name} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n    \r\n  baseURL: process.env.REACT_APP_YTC_API_URL,\r\n\r\n  params: {\r\n    key: process.env.REACT_APP_YTC_API_KEY,\r\n  },\r\n});\r\n\r\nexport default request;\r\n","import request from \"../../utils/axios\";\r\nimport { HOME_FAILED, HOME_REQUEST, HOME_SUCCESS } from \"../actionTypes\";\r\n\r\nexport const getPopularVideos = () => async (dispatch, getStatic) => {\r\n  try {\r\n    dispatch({\r\n      type: HOME_REQUEST,\r\n    });\r\n\r\n    const { data } = await request(\"/videos\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        chart: \"mostPopular\",\r\n        regionCode: \"BD\",\r\n        maxResults: 20,\r\n        pageToken: getStatic().homeVideos.pageToken,\r\n      },\r\n    });\r\n    console.log(data)\r\n\r\n    dispatch({\r\n      type: HOME_SUCCESS,\r\n      payload: {\r\n        videos: data.items,\r\n        pageToken: data.nextPageToken,\r\n        category: 'All'\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error \" + error);\r\n    dispatch({\r\n      type: HOME_FAILED,\r\n      message: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCategoricVideos = (keyword) => async (dispatch, getStatic) => {\r\n  try {\r\n    dispatch({\r\n      type: HOME_REQUEST,\r\n    });\r\n\r\n    const { data } = await request(\"/search\", {\r\n      params: {\r\n        part: \"snippet\",\r\n        maxResults: 20,\r\n        pageToken: getStatic().homeVideos.pageToken,\r\n        q: keyword,\r\n        type: \"video\",\r\n      },\r\n    });\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: HOME_SUCCESS,\r\n      payload: {\r\n        videos: data.items,\r\n        pageToken: data.nextPageToken,\r\n        category: keyword,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(\"error \" + error);\r\n    dispatch({\r\n      type: HOME_FAILED,\r\n      message: error.message,\r\n    });\r\n  }\r\n};\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILED = \"LOGIN_FAILED\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const LOAD_PROFILE = \"LOAD_PROFILE\";\r\n// export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\n\r\nexport const HOME_REQUEST = \"HOME_REQUEST\";\r\nexport const HOME_SUCCESS = \"HOME_SUCCESS\";\r\nexport const HOME_FAILED = \"HOME_FAILED\";","export const CLIENT_URL = \"/youtube-api-clone\";\r\nexport const YTC_ACESS_TOKEN = \"YTC_ACESS_TOKEN\";\r\nexport const YTC_PROFILE = \"YTC_PROFILE\";\r\nexport const keywords = [\r\n    \"All\",\r\n    \"React Js\",\r\n    \"Next Js\",\r\n    \"Cricket\",\r\n    \"Science Fiction\",\r\n    \"Use Of Api\",\r\n    \"Vue js\",\r\n    \"Redux\",\r\n    \"Music\",\r\n    \"Algorithm Art \",\r\n    \"E-commerce\",\r\n    \"Guitar\",\r\n    \"Bengali Songs\",\r\n    \"Coding\",\r\n    \"Poems\",\r\n    \"Islam\",\r\n  ];","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  getCategoricVideos,\r\n  getPopularVideos,\r\n} from \"../../redux/actions/videosAction\";\r\nimport { keywords } from \"../../utils/contsants\";\r\nimport \"./_categoriesbar.scss\";\r\n\r\nconst Categoriesbar = () => {\r\n  const [activeElement, setActiveElement] = useState(\"All\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleActiveElement = (val) => {\r\n    setActiveElement(val);\r\n \r\n    if (val === \"All\") {\r\n      dispatch(getPopularVideos());\r\n    } else {\r\n      dispatch(getCategoricVideos(val));\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"category\">\r\n      {keywords.map((word, i) => (\r\n        <div\r\n          key={i}\r\n          className={\r\n            activeElement === word\r\n              ? \"category__element active\"\r\n              : \"category__element\"\r\n          }\r\n          onClick={() => handleActiveElement(word)}\r\n        >\r\n          {word}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categoriesbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nimport { AiFillEye } from \"react-icons/ai\";\r\nimport \"./_video.scss\";\r\nimport request from \"../../utils/axios\";\r\n\r\nconst Video = ({ video }) => {\r\n  const [chanelIcon, setChanelIcon] = useState(\"\");\r\n  const [duration, setDuration] = useState(null);\r\n  const [views, setViews] = useState(null);\r\n\r\n  const {\r\n    id,\r\n    snippet: {\r\n      title,\r\n      publishedAt,\r\n      thumbnails: { medium },\r\n      channelTitle,\r\n      channelId,\r\n    },\r\n    \r\n  } = video;\r\n\r\n  //   console.log(\"time:\"+moment(\"PT15M33S\").fromNow())\r\n  const seconds = moment.duration(duration).asSeconds();\r\n  const _duration = moment.utc(seconds * 1000).format(\"mm:ss\");\r\n  const _videoId = id?.videoId || id\r\n\r\n  useEffect(() => {\r\n    const getContents = async () => {\r\n      const {\r\n        data: { items },\r\n      } = await request(\"/videos\", {\r\n        params: {\r\n          part: \"contentDetails,statistics\",\r\n          id: _videoId,\r\n        },\r\n      });\r\n      setDuration(items[0].contentDetails.duration)\r\n      setViews(items[0].statistics.viewCount) \r\n    //   console.log(items)\r\n    };\r\n    getContents();\r\n  }, [_videoId]);\r\n\r\n  // get channel Icon\r\n  useEffect(() => {\r\n    const getChannelIcon = async () => {\r\n      const {\r\n        data: { items },\r\n      } = await request(\"/channels\", {\r\n        params: {\r\n          part: \"snippet\",\r\n          id: channelId,\r\n        },\r\n      });\r\n      setChanelIcon(items[0].snippet.thumbnails.default.url);\r\n    };\r\n    getChannelIcon();\r\n  }, [channelId]);\r\n  //   console.log(chanelIcon);\r\n  \r\n  return (\r\n    <div className=\"video\">\r\n      <div className=\"video__top\">\r\n        <img src={medium.url} alt=\"thumbnail\" />\r\n        <span>{_duration}</span>\r\n      </div>\r\n      <div className=\"video__title\">{title}</div>\r\n      <div className=\"video__details\">\r\n        <span>\r\n          <AiFillEye /> {numeral(views).format(\"0.a\")} Views\r\n        </span>\r\n        <span className=\"space\"> • </span>\r\n        <span> {moment(publishedAt).fromNow()}</span>\r\n      </div>\r\n      <div className=\"video__channel\">\r\n        <img src={chanelIcon} alt=\"channel\" />\r\n        <p>{channelTitle}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Video;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'grid',\r\n    // justifyContent:'center'\r\n    placeItems:'center',\r\n    width:'100vw'\r\n   \r\n  },\r\n  loader:{\r\n    color: \"red\",\r\n\r\n}\r\n}));\r\n\r\nexport default function Loader() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <CircularProgress className={classes.loader} size={80}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCategoricVideos,\r\n  getPopularVideos,\r\n} from \"../../redux/actions/videosAction\";\r\nimport Categoriesbar from \"../categories/Categoriesbar\";\r\nimport Video from \"../videos/Video\";\r\nimport Loader from \"./Loader\";\r\nimport \"./_homescreen.scss\";\r\n\r\nconst HomeScreen = () => {\r\n  // const [videos,setVideos] = useState([])\r\n  const { videos, activeCategory} = useSelector((state) => state.homeVideos);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPopularVideos());\r\n    // console.log(\"pageToken\")\r\n  }, [dispatch]);\r\n  console.log(videos.length)\r\n\r\n  const fetchData = () => {\r\n    if (activeCategory === \"All\") {\r\n      dispatch(getPopularVideos());\r\n      // console.log(\"fetch\")\r\n\r\n    } else {\r\n      dispatch(getCategoricVideos(activeCategory));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"home_screen\">\r\n      <Categoriesbar />\r\n\r\n      <InfiniteScroll\r\n        dataLength={videos.length}\r\n        hasMore={true}\r\n        next={fetchData}\r\n        loader={<Loader />}\r\n        className=\"video-grid\"\r\n      >\r\n        {videos.map((video, index) => (\r\n          <Video video={video} key={index} />\r\n        ))}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJ4uybqEPan5fWxGOX0eAwDsfY2mc6z20\",\r\n  authDomain: \"ytc-app-stream.firebaseapp.com\",\r\n  projectId: \"ytc-app-stream\",\r\n  storageBucket: \"ytc-app-stream.appspot.com\",\r\n  messagingSenderId: \"723112692824\",\r\n  appId: \"1:723112692824:web:833e3cfcceeb5569720e2d\",\r\n  measurementId: \"G-KJ8PMC8BSX\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.auth();\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./_loginScreen.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../redux/actions/authAction\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CLIENT_URL } from \"../../utils/contsants\";\r\n\r\n\r\nexport const LoginScreen = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const token = useSelector((state) => state.auth.accessToken);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      history.push(`${CLIENT_URL}/`);\r\n      console.log(\"login success\")\r\n\r\n    }\r\n  }, [token]);\r\n\r\n  const handleLogin = () => {\r\n    dispatch(login());\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login_Container\">\r\n        <img src=\"./ytlogo.png\" alt=\"logo\" />\r\n        <button onClick={handleLogin} className=\"login_Btn\">\r\n          Login With Google\r\n        </button>\r\n        <p className=\"text\">This Project is made using Youtube Api</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport { YTC_ACESS_TOKEN, YTC_PROFILE } from \"../../utils/contsants\";\r\nimport auth from \"../../utils/firebase\";\r\nimport {\r\n  LOAD_PROFILE,\r\n  LOGIN_FAILED,\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOG_OUT,\r\n} from \"../actionTypes\";\r\n\r\nexport const login = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    });\r\n\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.addScope(\"https://www.googleapis.com/auth/youtube.force-ssl\");\r\n    const res = await auth.signInWithPopup(provider);\r\n    console.log(res);\r\n\r\n    const accessToken = res.credential.accessToken;\r\n\r\n    const profile = {\r\n      name: res.additionalUserInfo.profile.name,\r\n      photoUrl: res.additionalUserInfo.profile.picture,\r\n    };\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: accessToken,\r\n    });\r\n\r\n    dispatch({\r\n      type: LOAD_PROFILE,\r\n      payload: profile,\r\n    });\r\n\r\n    // session storage\r\n    sessionStorage.setItem(YTC_ACESS_TOKEN, accessToken);\r\n    sessionStorage.setItem(YTC_PROFILE, JSON.stringify(profile));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_FAILED,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n\r\n  await auth.signOut();\r\n\r\n  dispatch({\r\n    type: LOG_OUT,\r\n  });\r\n\r\n  sessionStorage.removeItem(YTC_ACESS_TOKEN);\r\n  sessionStorage.removeItem(YTC_PROFILE);\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  MdSubscriptions,\r\n  MdExitToApp,\r\n  MdThumbUp,\r\n  MdHistory,\r\n  MdHome,\r\n  MdSentimentDissatisfied,\r\n  MdLibraryBooks,\r\n} from \"react-icons/md\";\r\nimport \"./_sidebar.scss\";\r\nimport { logout } from \"../../redux/actions/authAction\";\r\n\r\nconst Sidebar = ({ sidebar, handleToggle }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    console.log(\"logout\");\r\n    \r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className={sidebar ? \"sidebar open\" : \"sidebar\"}\r\n      onClick={() => handleToggle()}\r\n    >\r\n      <li>\r\n        <MdHome size={23} />\r\n        <span>Home</span>\r\n      </li>\r\n      <li>\r\n        <MdSubscriptions size={23} />\r\n        <span>Subscription</span>\r\n      </li>\r\n      <li>\r\n        <MdThumbUp size={23} />\r\n        <span>Liked Video</span>\r\n      </li>\r\n      <li>\r\n        <MdHistory size={23} />\r\n        <span>History</span>\r\n      </li>\r\n      <li>\r\n        <MdLibraryBooks size={23} />\r\n        <span>Library</span>\r\n      </li>\r\n      <li>\r\n        <MdSentimentDissatisfied size={23} />\r\n        <span>Who's Know</span>\r\n      </li>\r\n      <hr />\r\n      <li onClick={handleLogout}>\r\n        <MdExitToApp size={23} />\r\n        <span>Log Out</span>\r\n      </li>\r\n      <hr />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/header/Header\";\r\nimport HomeScreen from \"./components/screens/HomeScreen\";\r\nimport { LoginScreen } from \"./components/screens/LoginScreen\";\r\nimport Sidebar from \"./components/sidebar/Sidebar\";\r\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\r\nimport { CLIENT_URL } from \"./utils/contsants\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./_app.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const [sidebar, handleSidebar] = useState(false);\r\n  const handleToggle = () => handleSidebar((val) => !val);\r\n\r\n  return (\r\n    <>\r\n      <Header handleToggle={handleToggle} />\r\n      <div className=\"app__container\">\r\n        <Sidebar sidebar={sidebar} handleToggle={handleToggle} />\r\n        <div className=\"app__main\">{children}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst YoutubeApp = () => {\r\n  const { accessToken, loading } = useSelector((state) => state.auth);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!accessToken && !loading) {\r\n      history.push(`${CLIENT_URL}/auth`);\r\n    }\r\n  }, [accessToken, loading, history]);\r\n\r\n  return (\r\n    // <Router>\r\n    <Switch>\r\n      <Route path={`${CLIENT_URL}/auth`}>\r\n        <LoginScreen />\r\n      </Route>\r\n      <Route exact path={`${CLIENT_URL}/`}>\r\n        <Layout>\r\n          <HomeScreen />\r\n        </Layout>\r\n      </Route>\r\n      <Route exact path={`${CLIENT_URL}/search`}>\r\n        <Layout>\r\n          <h1>Search Results</h1>\r\n        </Layout>\r\n      </Route>\r\n      <Route>\r\n        <Redirect to={`${CLIENT_URL}/`} />\r\n      </Route>\r\n    </Switch>\r\n    // </Router>\r\n  );\r\n};\r\n\r\nexport default YoutubeApp;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { YTC_ACESS_TOKEN, YTC_PROFILE } from \"../../utils/contsants\";\r\nimport * as types from \"../actionTypes\";\r\n\r\nconst initailState = {\r\n  accessToken: sessionStorage.getItem(YTC_ACESS_TOKEN) || null,\r\n  profile: JSON.parse(sessionStorage.getItem(YTC_PROFILE)) || null,\r\n  loading: false,\r\n};\r\n\r\nexport const authReducer = (state = initailState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case types.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        accessToken: payload,\r\n      };\r\n\r\n    case types.LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        accessToken: null,\r\n        error: payload,\r\n      };\r\n\r\n    case types.LOAD_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case types.LOG_OUT:\r\n      return {\r\n        ...state,\r\n        accessToken: null,\r\n        profile: null,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../actionTypes\";\r\n\r\nconst initailState = {\r\n  videos: [],\r\n  pageToken: null,\r\n  loading: false,\r\n  activeCategory: \"All\",\r\n};\r\n\r\nexport const videosReducer = (state = initailState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.HOME_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.HOME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        videos:\r\n          state.activeCategory === payload.category\r\n            ? [...state.videos, ...payload.videos]\r\n            : payload.videos,\r\n        pageToken: payload.pageToken,\r\n        activeCategory: payload.category,\r\n      };\r\n\r\n    case types.HOME_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { authReducer } from \"./reducer/authReducer\";\r\nimport { videosReducer } from \"./reducer/videosReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  homeVideos:videosReducer,\r\n});\r\n\r\nconst compose = composeWithDevTools(applyMiddleware(thunk));\r\n\r\nconst store = createStore(rootReducer, {}, compose);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./_base.scss\";\nimport YoutubeApp from \"./YoutubeApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <React.StrictMode>\n        <YoutubeApp />\n      </React.StrictMode>\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}